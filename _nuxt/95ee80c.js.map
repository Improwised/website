{"version":3,"sources":["webpack:///./plugins/filters.js","webpack:///./store/index.js"],"names":["titlecase","value","replace","m","toUpperCase","slugify","toLowerCase","urls","services","servicesListWithTitleOnly","service","title","careers","career","caseStudies","aboutUs","whyus","testimonials","whyUsHome","context","inject","$titlecase","$slugify","assets","id","$config","DATA_URL","$urls","strict","state","mutations","actions","nuxtServerInit","dispatch","commit","then","data","slug","this","$axios","$get"],"mappings":"4GAAO,SAASA,EAAUC,GACxB,OAAKA,EACEA,EACJC,QAAQ,KAAM,KACdA,QAAQ,eAAe,SAACC,GAAD,OAAOA,EAAEC,iBAHhBH,EAMd,SAASI,EAAQJ,GACtB,OAAKA,EACEA,EACJC,QAAQ,eAAe,SAACC,GAAD,OAAOA,EAAEG,iBAChCJ,QAAQ,KAAM,KAHED,EAMrB,IAAMM,EAAO,CACXC,SAAU,wCACVC,0BAA2B,+BAC3BC,QAAS,SAACC,OAAD,8CAC0BA,MAD1B,yBAGTC,QAAS,uCACTC,OAAQ,SAACF,OAAD,6CAC0BA,MAD1B,yBAGRG,YAAa,iCAEbC,QAAS,6BAETC,MAAO,sCAEPC,aAAc,6CAEdC,UAAW,4CAGE,aAAUC,EAASC,GAChCA,EAAO,YAAapB,GACpBmB,EAAQE,WAAarB,EAErBoB,EAAO,UAAWf,GAClBc,EAAQG,SAAWjB,EAGnBE,EAAKgB,OADU,SAACC,GAAD,gBAAWL,EAAQM,QAAQC,SAA3B,mBAA8CF,IAG7DJ,EAAO,OAAQb,GACfY,EAAQQ,MAAQpB,I,wPC9CLqB,G,OAAS,GAETC,EAAQ,iBAAO,CAC1BrB,SAAU,KAGCsB,EAAY,CACvBtB,SADuB,SACdqB,EAAOrB,GACdqB,EAAMrB,SAAWA,IAIRuB,EAAU,CACfC,eADe,YACsB,wJAApBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,OAAU,SACnCD,EAAS,6BAA6BE,MAAK,SAAC3B,GAChD0B,EAAO,WAAY1B,EAAS4B,SAFW,8CAM3C3B,0BAPqB,WAOiB4B,GAAM,EAAhBH,OAC1B,OAAOI,KAAKC,OAAOC,KAAKF,KAAKX,MAAMlB,+B","file":"95ee80c.js","sourcesContent":["export function titlecase(value) {\n  if (!value) return value;\n  return value\n    .replace(/-/g, \" \")\n    .replace(/(^\\w|\\s\\w)/g, (m) => m.toUpperCase());\n}\n\nexport function slugify(value) {\n  if (!value) return value;\n  return value\n    .replace(/(^\\w|\\s\\w)/g, (m) => m.toLowerCase())\n    .replace(/ /g, \"-\");\n}\n\nconst urls = {\n  services: `/items/services?fields=*.*&sort=title`,\n  servicesListWithTitleOnly: \"/items/services?fields=title\",\n  service: (title) =>\n    `/items/services?filter[title]=${title}&single=1&fields=*.*`,\n\n  careers: \"/items/careers?fields=*.*&sort=title\",\n  career: (title) =>\n    `/items/careers?filter[title]=${title}&single=1&fields=*.*`,\n\n  caseStudies: \"/items/case-studies?fields=*.*\",\n\n  aboutUs: \"/items/about_us?fields=*.*\",\n\n  whyus: \"/items/why_us?fields=*.*&sort=title\",\n\n  testimonials: \"/items/testimonials?fields=*.*&sort=author\",\n\n  whyUsHome: `/items/why_us_home?fields=*.*&sort=title`,\n};\n\nexport default function (context, inject) {\n  inject(\"titlecase\", titlecase);\n  context.$titlecase = titlecase;\n\n  inject(\"slugify\", slugify);\n  context.$slugify = slugify;\n\n  const assets = (id) => `${context.$config.DATA_URL}/assets/${id}`;\n  urls.assets = assets;\n\n  inject(\"urls\", urls);\n  context.$urls = urls;\n}\n","export const strict = false;\n\nexport const state = () => ({\n  services: [],\n});\n\nexport const mutations = {\n  services(state, services) {\n    state.services = services;\n  },\n};\n\nexport const actions = {\n  async nuxtServerInit({ dispatch, commit }) {\n    await dispatch(\"servicesListWithTitleOnly\").then((services) => {\n      commit(\"services\", services.data);\n    });\n  },\n\n  servicesListWithTitleOnly({ commit }, slug) {\n    return this.$axios.$get(this.$urls.servicesListWithTitleOnly);\n  },\n};\n"],"sourceRoot":""}